% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build.R
\name{build_members}
\alias{build_members}
\title{Reconcile and Merge Members}
\usage{
build_members(
  summarize = TRUE,
  split = FALSE,
  as_tibble = ironmarch_as_tibble()
)
}
\arguments{
\item{summarize}{\code{logical(1L)}, Default: \code{TRUE}.
Whether to aggregate all observations into single rows, prioritizing values found in
\code{im_core_dfs}.}

\item{split}{\code{logical(1L)}, Default: \code{FALSE}.
Whether to split the result into a named list of separate data frames, retaining all
observations.
Ignored if \code{summarize} is \code{TRUE}.}

\item{as_tibble}{\code{logical(1L)}, Default: \code{TRUE}.
Whether a \code{\link[tibble:tibble]{tibble::tibble()}} should be returned. Ignored if the \code{{tibble}} package
is not installed.}
}
\value{
\itemize{
\item Data Frame
\itemize{
\item default: a \code{\link[tibble:tibble]{tibble::tibble()}} if \code{as_tibble} is \code{TRUE} and \code{{tibble}} is installed.
\item alternative: a \code{\link[data.table:data.table]{data.table::data.table()}}
}
\item If \code{split} is \code{TRUE} and \code{summarize} is \code{FALSE}, the result will be a \code{list()} of
data frames.
}
}
\description{
\code{build_messages()} reconciles and merges the members found in
\code{im_orig_dfs$orig_members} and \code{im_core_dfs$core_members}.
}
\details{
Values found in \code{im_core_dfs$core_members} are preferred. Otherwise values found in
\code{im_orig_dfs$orig_members} are kept.
}
\examples{
# members summarized to single rows ===================================================
build_members()

# all member observations =============================================================
build_members(summarize = FALSE)

# all member observations split into a list of data frames ============================
split_members <- build_members(summarize = FALSE, split = TRUE)

# first three members that appear in both... ==========================================
# ... `im_orig_dfs$orig_members` and `im_core_dfs$core_members`
split_members[
  vapply(split_members, function(.x) nrow(.x) == 2, logical(1L))
][1:3]


}
\author{
Brendan Knapp \email{brendan.g.knapp@gmail.com}
}
